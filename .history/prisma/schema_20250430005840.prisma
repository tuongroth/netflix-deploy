// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(auto()) @map("_id") @db.ObjectId
  userId             String  @db.ObjectId
  type               String
  provider           String
  providerAccountId  String
  refreshToken       String? @db.String
  accessToken        String? @db.String
  expiresAt          Int?
  tokenType          String?
  scope              String?
  idToken            String? @db.String
  sessionState       String?
  user               User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken  String   @unique
  userId        String   @db.ObjectId
  expires       DateTime
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Movie {
  id            String @id @default(auto()) @map("_id") @db.ObjectId
  title         String
  description   String
  videoUrl      String
  thumbnailUrl  String
}

model User {
  id       String     @id @default(auto()) @map("_id") @db.ObjectId
  name     String?
  email    String?    @unique
  image    String?

  accounts Account[]
  sessions Session[]
}
